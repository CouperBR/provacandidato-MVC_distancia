@model ProvaCandidato.Data.Entidade.Cliente

@{
    ViewBag.Title = "Editar";
    var cidadeSelecionada = Model.CidadeId;
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Codigo)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascimento, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CidadeId, "CidadeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="CidadeId" class="form-control" name="CidadeId">
                </select>
                @*@Html.DropDownList("CidadeId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.CidadeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Ativo)
                    @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClienteObservacoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.ClienteObservacoes != null)
                {
                    foreach (var observacao in Model.ClienteObservacoes)
                    {
                        <p>@observacao.Observacao</p>
                    }
                }
                <div id="showmodal" class="modal fade" tabindex="-1" role="dialog">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            @{
                                Html.RenderPartial("AddObservacaoPartialView", Model);
                            }
                        </div><!-- /.modal-content -->
                    </div><!-- /.modal-dialog -->
                </div><!-- /.modal -->
                <button id='open' data-toggle="modal" class="btn btn-success" data-target="#showmodal">Adicionar observação</button>
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar à lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
        $.get("/api/Combo/", function (data, status) {
            var codigo = @cidadeSelecionada;
            console.log(codigo);
            if (status) {
                var option;
                option += '<option>' + 'Selecione a cidade' + '</option>';
                if (data.length > 0) {
                    $.each(data, function (i, obj) {
                        console.log(codigo, obj.Codigo);
                        if (codigo == obj.Codigo)
                            option += `<option selected value =${obj.Codigo}>${obj.Nome}</option>`;
                        else
                            option += `<option value =${obj.Codigo}>${obj.Nome}</option>`;
                    })
                }
                $('#CidadeId').html(option).show();
            }
        });

        $('.AddObservacao').on('click', function () {
            $('#AddObservacaoForm').dialog({
                autoOpen: true,
                position: { my: "center", at: "top+350", of: window },
                width: 1000,
                resizable: false,
                title: 'Add User Form',
                modal: true,
                open: function () {
                    $(this).load('@Url.Action("AddObservacaoPartialView", "Observacao")')
                },
                buttons: {
                    "Add Observacao": function () {
                        alert('a');
                    },
                    Cancel: function () {
                        $(this).dialog('close');
                    }
                }
            });
        });
        $("#adicionarObservacao").click(function () {

            var data = { codigo: @Model.Codigo , observacao: $('#observacao').val() };

            $.ajax({
                type: "POST",
                data: JSON.stringify(data),
                url: "/api/Combo/CreateObservacao",
                contentType: "application/json",
                success: function (result) {
                    window.location.href = "/Cliente/Edit/@Model.Codigo";
                },
                error: function (e) {
                    console.log(e);
                    alert("We have an error");
                }
            });
        });
</script>
}
